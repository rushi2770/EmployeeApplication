@model EmployeeApplication.Models.EmployeeModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
</head>
<body>
    @using (Html.BeginForm("Create", "Employee", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal col-md-offset-2 col-md-6">
            <h4>Employee</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.employee.Prefix, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Prefix, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prefix, "", new { @class = "text-danger" })*@
                    @Html.DropDownListFor(model=> model.PrefixSelected, (IEnumerable<SelectListItem>)ViewBag.PrefixList, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.employee.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.employee.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.MiddleName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.employee.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
    
   
    
            <div class="form-group">
                @Html.LabelFor(model => model.employee.Suffix, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Prefix, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prefix, "", new { @class = "text-danger" })*@
                    @Html.DropDownListFor(model=> model.SuffixSelected, (IEnumerable<SelectListItem>)ViewBag.SuffixList, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.employee.PrimaryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.PrimaryAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.PrimaryAddress, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.employee.SecondaryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.SecondaryAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.SecondaryAddress, "", new { @class = "text-danger" })
                </div>
            </div>
    
            @*<div class="form-group">
                @Html.LabelFor(model => model.lang.Language, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.lang.Language, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.lang.Language, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lang.Language, "", new { @class = "text-danger" })
                </div>
            </div>*@
    
            <div>
                <table class="border border-white">
                    <tr>
                        <th>
                            Language
                        </th>
                        <th>
                            Read
                        </th>
                        <th>
                            Write
                        </th>
                        <th>
                            Speak
                        </th>
                    </tr>
                    @for (var i = 0; i < Model.Language.Count; i++)
                {
                        <tr>
                            <td class="col-md-3">
                                @Html.HiddenFor(modelItem => Model.Language[i].Language)
                                @Html.DisplayFor(modelItem => Model.Language[i].Language)
                            </td>
                            <td>

                                @Html.EditorFor(modelItem => Model.Language[i].Read)
                            </td>
                            <td class="col-md-3">
                                @Html.EditorFor(modelItem => Model.Language[i].Write)
                            </td>
                            <td class="col-md-3">
                                @Html.EditorFor(modelItem => Model.Language[i].Speak)
                            </td>
                        </tr>
                    }

                </table>

            </div>
            
            @*<div class="form-group">
                @Html.LabelFor(model => model.lang.Read, htmlAttributes: new { @class = "control-label col-md-2" })
                
                    <div class="checkbox">
                        @Html.EditorFor(model => model.lang.Read)
                        @Html.ValidationMessageFor(model => model.lang.Read, "", new { @class = "text-danger" })
                   
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.lang.Write, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.lang.Write)
                        @Html.ValidationMessageFor(model => model.lang.Write, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.lang.Speak, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.lang.Speak)
                        @Html.ValidationMessageFor(model => model.lang.Speak, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
    
            <div class="form-group">
                @Html.LabelFor(model => model.employee.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.Salary, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.employee.PreviousEmployer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.PreviousEmployer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.PreviousEmployer, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.employee.PreviousEmployerAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.PreviousEmployerAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.PreviousEmployerAddress, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
